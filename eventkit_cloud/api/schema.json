{"swagger": "2.0", "info": {"title": "EventKit API", "description": "", "version": ""}, "host": "cloud.eventkit.test", "schemes": ["http"], "paths": {"/api/docs/": {"get": {"operationId": "docs_list", "responses": {"200": {"description": ""}}, "parameters": [], "tags": ["docs"]}}, "/api/estimate": {"get": {"operationId": "estimate_list", "responses": {"200": {"description": ""}}, "parameters": [], "tags": ["estimate"]}}, "/api/formats": {"get": {"operationId": "formats_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "* slug: optional slug value of export format\n* return: A list of format types.", "summary": "* slug: optional slug value of export format", "tags": ["formats"]}}, "/api/formats/{slug}": {"get": {"operationId": "formats_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "slug", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "* slug: optional slug value of export format\n* return: A single format object matching the provided slug value.", "summary": "* slug: optional slug value of export format", "tags": ["formats"]}}, "/api/groups": {"get": {"operationId": "groups_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "type": "integer"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "GET all groups\n\nSample result:\n\n     [\n        {\n            \"id\": 54,\n            \"name\": \"Omaha 319\",\n            \"members\": [\n              \"user2\",\n              \"admin\"\n            ],\n            \"administrators\": [\n              \"admin\"\n            ]\n          }\n    ]", "summary": "GET all groups", "tags": ["groups"]}, "post": {"operationId": "groups_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}}, "required": ["name"]}}], "description": "create a new group and place  the current logged in user in the group and its administrators.\noptionally, provide additional group members\n\n\nSample input:\n\n    {\n        \"name\": \"Omaha 319\"\n    }", "summary": "create a new group and place  the current logged in user in the group and its administrators.", "consumes": ["application/json"], "tags": ["groups"]}}, "/api/groups/{id}": {"get": {"operationId": "groups_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "* get a group with a specific ID.  Return its data, including users in the group", "summary": "* get a group with a specific ID.  Return its data, including users in the group", "tags": ["groups"]}, "put": {"operationId": "groups_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}}, "required": ["name"]}}], "description": "We don't support calls to PUT for this viewset.\n* returns: 400 bad request", "summary": "We don't support calls to PUT for this viewset.", "consumes": ["application/json"], "tags": ["groups"]}, "patch": {"operationId": "groups_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}}}}], "description": "Change the group's name, members, and administrators\n\n\nSample input:\n\n    {\n       \"name\": \"Omaha 319\"\n       \"members\": [ \"user2\", \"user3\", \"admin\"],\n       \"administrators\": [ \"admin\" ]\n    }\n\nIf a member wishes to remove themselves from a group they can make an patch request with no body.\nHowever, this will not work if they are a admin of the group.", "summary": "Change the group's name, members, and administrators", "consumes": ["application/json"], "tags": ["groups"]}, "delete": {"operationId": "groups_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Destroy a group", "summary": "Destroy a group", "tags": ["groups"]}}, "/api/groups/{id}/users": {"get": {"operationId": "groups_users", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "Api components for viewing, creating, and editing groups", "summary": "Api components for viewing, creating, and editing groups", "tags": ["groups"]}}, "/api/jobs": {"get": {"operationId": "jobs_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "type": "integer"}, {"name": "name", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "description", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "event", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "start", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "end", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "region", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user_private", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "feature", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}], "description": "List export jobs.\n\nThe list of returned exports can be filtered by the **filters.JobFilter**\nand/or by a bounding box extent.", "summary": "List export jobs.", "tags": ["jobs"]}, "post": {"operationId": "jobs_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"provider_tasks": {"description": "", "type": "array", "items": {"type": "string"}}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "event": {"description": "", "type": "string"}, "preset": {"description": "", "type": "integer"}, "published": {"description": "", "type": "boolean"}, "visibility": {"description": "", "type": "string"}, "featured": {"description": "", "type": "boolean"}, "include_zipfile": {"description": "", "type": "boolean"}}, "required": ["provider_tasks", "name", "description"]}}], "description": "Create a Job from the supplied request data.\n\nThe request data is validated by *api.serializers.JobSerializer*.\nAssociates the *Job* with required *ExportFormats*, *ExportConfig*\n\n* request: the HTTP request in JSON.\n\n    Example:\n\n        {\n            \"name\" : \"Example Name\",\n            \"description\" : \"Example Description\",\n            \"event\" : \"Example Event (Project)\",\n            \"include_zipfile\" : true,\n            \"selection\": { ... valid geojson ... },\n            \"tags\" : [],\n            \"provider_tasks\" : [{\n                    \"provider\" : \"OpenStreetMap Data (Themes)\",\n                    \"formats\" : [\"shp\", \"gpkg\"]\n                }\n            ]\n        }\n\n\nTo monitor the resulting export run retrieve the `uid` value from the returned json\nand call /api/runs?job_uid=[the returned uid]\n\n* Returns: the newly created Job instance.\n\n    Example:\n\n        {\n          \"provider_tasks\": [\n            {\n              \"provider\": \"OpenStreetMap Tiles\",\n              \"formats\": [\n                \"gpkg\"\n              ]\n            }\n          ],\n          \"uid\": \"cf9c038c-a09a-4058-855a-b0b1d5a6c5c4\",\n          \"url\": \"http://cloud.eventkit.test/api/jobs/cf9c038c-a09a-4058-855a-b0b1d5a6c5c4\",\n          \"name\": \"test\",\n          \"description\": \"test\",\n          \"event\": \"test\",\n          \"created_at\": \"2017-03-10T15:09:29.802364Z\",\n          \"owner\": \"admin\",\n          \"exports\": [\n            {\n              \"formats\": [\n                {\n                  \"uid\": \"167fbc03-83b3-41c9-8034-8566257cb2e8\",\n                  \"url\": \"http://cloud.eventkit.test/api/formats/gpkg\",\n                  \"slug\": \"gpkg\",\n                  \"name\": \"Geopackage\",\n                  \"description\": \"GeoPackage\"\n                }\n              ],\n              \"provider\": \"OpenStreetMap Tiles\"\n            }\n          ],\n          \"configurations\": [],\n          \"visibility\" : \"PRIVATE\",\n          \"feature_save\": false,\n          \"feature_pub\": false,\n          \"region\": null,\n          \"extent\": {\n            \"type\": \"Feature\",\n            \"properties\": {\n              \"uid\": \"cf9c038c-a09a-4058-855a-b0b1d5a6c5c4\",\n              \"name\": \"test\"\n            },\n            \"geometry\": {\n              \"type\": \"Polygon\",\n              \"coordinates\": [\n                [\n                  [\n                    -43.248281,\n                    -22.816694\n                  ],\n                  [\n                    -43.248281,\n                    -22.812105\n                  ],\n                  [\n                    -43.242617,\n                    -22.812105\n                  ],\n                  [\n                    -43.242617,\n                    -22.816694\n                  ],\n                  [\n                    -43.248281,\n                    -22.816694\n                  ]\n                ]\n              ]\n            }\n          },\n          \"tags\": [\n            {\n              \"key\": \"highway\",\n              \"value\": \"path\",\n              \"data_model\": \"HDM\",\n              \"geom_types\": [\n                \"line\"\n              ]\n            }\n          ],\n          \"include_zipfile\": false\n        }\n\n* Raises: ValidationError: in case of validation errors.\n** returns: Not 202", "summary": "Create a Job from the supplied request data.", "consumes": ["application/json"], "tags": ["jobs"]}}, "/api/jobs/filter": {"post": {"operationId": "jobs_filter", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"provider_tasks": {"description": "", "type": "array", "items": {"type": "string"}}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "event": {"description": "", "type": "string"}, "preset": {"description": "", "type": "integer"}, "published": {"description": "", "type": "boolean"}, "visibility": {"description": "", "type": "string"}, "featured": {"description": "", "type": "boolean"}, "include_zipfile": {"description": "", "type": "boolean"}}, "required": ["provider_tasks", "name", "description"]}}], "description": "Return all jobs that are readable by every\ngroups and every user in the payload\n\n{  \"permissions\" : {\n   groups : [ 'group_one', 'group_two', ...]\n   members : ['user_one', 'user_two' ... ]\n    }\n}", "summary": "Return all jobs that are readable by every", "consumes": ["application/json"], "tags": ["jobs"]}}, "/api/jobs/{uid}": {"get": {"operationId": "jobs_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "name", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "description", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "event", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "start", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "end", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "region", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user_private", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "feature", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}], "description": "Look up a single job by uid value.\n* uid: optional job uid lookup field\n* return: The selected job.", "summary": "Look up a single job by uid value.", "tags": ["jobs"]}, "put": {"operationId": "jobs_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "name", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "description", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "event", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "start", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "end", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "region", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user_private", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "feature", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"provider_tasks": {"description": "", "type": "array", "items": {"type": "string"}}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "event": {"description": "", "type": "string"}, "preset": {"description": "", "type": "integer"}, "published": {"description": "", "type": "boolean"}, "visibility": {"description": "", "type": "string"}, "featured": {"description": "", "type": "boolean"}, "include_zipfile": {"description": "", "type": "boolean"}}, "required": ["provider_tasks", "name", "description"]}}], "description": "Update a job object, looked up by uid.\n* uid: optional job uid lookup field\n* return: The status of the update.", "summary": "Update a job object, looked up by uid.", "consumes": ["application/json"], "tags": ["jobs"]}, "patch": {"operationId": "jobs_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "name", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "description", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "event", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "start", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "end", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "region", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user_private", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "feature", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"provider_tasks": {"description": "", "type": "array", "items": {"type": "string"}}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "event": {"description": "", "type": "string"}, "preset": {"description": "", "type": "integer"}, "published": {"description": "", "type": "boolean"}, "visibility": {"description": "", "type": "string"}, "featured": {"description": "", "type": "boolean"}, "include_zipfile": {"description": "", "type": "boolean"}}}}], "description": "Update one or more attributes for the given job\n\n* request: the HTTP request in JSON.\n\n    Examples:\n\n        { \"visibility\" : 'SHARED', \"featured\" : true }\n        { \"featured\" : false }\n\n* Returns: a copy of the new  values on success\n\n    Example:\n\n        {\n            \"visibility\": 'SHARED',\n            \"featured\" : true,\n            \"success\": true\n        }\n\n** returns: 400 on error", "summary": "Update one or more attributes for the given job", "consumes": ["application/json"], "tags": ["jobs"]}, "delete": {"operationId": "jobs_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "name", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "description", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "event", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "start", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "end", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "region", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "user_private", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "feature", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}], "description": "Destroy a job", "summary": "Destroy a job", "tags": ["jobs"]}}, "/api/jobs/{uid}/run": {"get": {"operationId": "jobs_run_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}], "description": "Creates the run (i.e. runs the job).\n\nGets the job_uid and current user from the request.\nCreates an instance of the TaskFactory and\ncalls run_task on it, passing the job_uid and user.\n\n*request:* the http request\n\n*Returns:*\n    - the serialized run data.", "summary": "Creates the run (i.e. runs the job).", "tags": ["jobs"]}, "post": {"operationId": "jobs_run_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"provider_tasks": {"description": "", "type": "array", "items": {"type": "string"}}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "event": {"description": "", "type": "string"}, "preset": {"description": "", "type": "integer"}, "published": {"description": "", "type": "boolean"}, "visibility": {"description": "", "type": "string"}, "featured": {"description": "", "type": "boolean"}, "include_zipfile": {"description": "", "type": "boolean"}}, "required": ["provider_tasks", "name", "description"]}}], "description": "Creates the run (i.e. runs the job).\n\nGets the job_uid and current user from the request.\nCreates an instance of the TaskFactory and\ncalls run_task on it, passing the job_uid and user.\n\n*request:* the http request\n\n*Returns:*\n    - the serialized run data.", "summary": "Creates the run (i.e. runs the job).", "consumes": ["application/json"], "tags": ["jobs"]}}, "/api/licenses": {"get": {"operationId": "licenses_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "* slug: optional slug value of license\n* return: A list of license objects.", "summary": "* slug: optional slug value of license", "tags": ["licenses"]}}, "/api/licenses/{slug}": {"get": {"operationId": "licenses_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "slug", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "* slug: optional slug value of license\n* return: A single license object matching the provided slug value.", "summary": "* slug: optional slug value of license", "tags": ["licenses"]}}, "/api/licenses/{slug}/download": {"get": {"operationId": "licenses_download", "responses": {"200": {"description": ""}}, "parameters": [{"name": "slug", "required": true, "in": "path", "description": "", "type": "string"}], "description": "Responds to a GET request with a text file of the license text\n\n*request:* the http request\n*slug:* the license slug\n\n*Returns:*\n    - a .txt file of the license text.", "summary": "Responds to a GET request with a text file of the license text", "tags": ["licenses"]}}, "/api/notifications": {"get": {"operationId": "notifications_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "type": "integer"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}], "description": "Get all user notifications that are not deleted", "summary": "Get all user notifications that are not deleted", "tags": ["notifications"]}, "post": {"operationId": "notifications_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"unread": {"description": "", "type": "boolean"}, "deleted": {"description": "", "type": "boolean"}, "level": {"description": "", "type": "string"}, "verb": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "timestamp": {"description": "", "type": "string"}}, "required": ["verb"]}}], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "consumes": ["application/json"], "tags": ["notifications"]}}, "/api/notifications/counts": {"get": {"operationId": "notifications_counts", "responses": {"200": {"description": ""}}, "parameters": [], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "tags": ["notifications"]}}, "/api/notifications/delete": {"delete": {"operationId": "notifications_delete", "responses": {"204": {"description": ""}}, "parameters": [], "description": "Delete notifications\nIf request data of { ids: [....ids] } is provided only those ids will be deleted\nIf no request data is included all notifications will be deleted", "summary": "Delete notifications", "tags": ["notifications"]}}, "/api/notifications/mark": {"post": {"operationId": "notifications_mark", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"unread": {"description": "", "type": "boolean"}, "deleted": {"description": "", "type": "boolean"}, "level": {"description": "", "type": "string"}, "verb": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "timestamp": {"description": "", "type": "string"}}, "required": ["verb"]}}], "description": "Change the status of one or more notifications.\n**Use if you need to modify in more than one way. Otherwise just use 'delete', 'read', or 'unread'**", "summary": "Change the status of one or more notifications.", "consumes": ["application/json"], "tags": ["notifications"]}}, "/api/notifications/read": {"post": {"operationId": "notifications_read", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"unread": {"description": "", "type": "boolean"}, "deleted": {"description": "", "type": "boolean"}, "level": {"description": "", "type": "string"}, "verb": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "timestamp": {"description": "", "type": "string"}}, "required": ["verb"]}}], "description": "Mark notifications as read\nIf request data of { ids: [....ids] } is provided only those ids will be marked\nIf no request data is included all notifications will be marked read", "summary": "Mark notifications as read", "consumes": ["application/json"], "tags": ["notifications"]}}, "/api/notifications/unread": {"post": {"operationId": "notifications_unread", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"unread": {"description": "", "type": "boolean"}, "deleted": {"description": "", "type": "boolean"}, "level": {"description": "", "type": "string"}, "verb": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "timestamp": {"description": "", "type": "string"}}, "required": ["verb"]}}], "description": "Mark notifications as unread\nIf request data of { ids: [....ids] } is provided only those ids will be marked\nIf no request data is included all notifications will be marked unread", "summary": "Mark notifications as unread", "consumes": ["application/json"], "tags": ["notifications"]}}, "/api/notifications/{id}": {"get": {"operationId": "notifications_read_0", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "tags": ["notifications"]}, "put": {"operationId": "notifications_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"unread": {"description": "", "type": "boolean"}, "deleted": {"description": "", "type": "boolean"}, "level": {"description": "", "type": "string"}, "verb": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "timestamp": {"description": "", "type": "string"}}, "required": ["verb"]}}], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "consumes": ["application/json"], "tags": ["notifications"]}, "patch": {"operationId": "notifications_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"unread": {"description": "", "type": "boolean"}, "deleted": {"description": "", "type": "boolean"}, "level": {"description": "", "type": "string"}, "verb": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "timestamp": {"description": "", "type": "string"}}}}], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "consumes": ["application/json"], "tags": ["notifications"]}, "delete": {"operationId": "notifications_delete_0", "responses": {"204": {"description": ""}}, "parameters": [{"name": "id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "tags": ["notifications"]}}, "/api/provider_tasks": {"get": {"operationId": "provider_tasks_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "* return: A list of data provider task objects.", "summary": "* return: A list of data provider task objects.", "tags": ["provider_tasks"]}, "post": {"operationId": "provider_tasks_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}, "status": {"description": "", "type": "string"}, "display": {"description": "", "type": "boolean"}, "slug": {"description": "", "type": "string"}, "estimated_size": {"description": "", "type": "number"}, "estimated_duration": {"description": "", "type": "number"}}}}], "description": "Create a data provider task object.\n* uid: optional lookup field\n* return: The status of the object creation.", "summary": "Create a data provider task object.", "consumes": ["application/json"], "tags": ["provider_tasks"]}}, "/api/provider_tasks/{uid}": {"get": {"operationId": "provider_tasks_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "GET a single export task.", "summary": "GET a single export task.", "tags": ["provider_tasks"]}, "put": {"operationId": "provider_tasks_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}, "status": {"description": "", "type": "string"}, "display": {"description": "", "type": "boolean"}, "slug": {"description": "", "type": "string"}, "estimated_size": {"description": "", "type": "number"}, "estimated_duration": {"description": "", "type": "number"}}}}], "description": "Update a data provider task object.\n* uid: optional lookup field\n* return: The status of the update.", "summary": "Update a data provider task object.", "consumes": ["application/json"], "tags": ["provider_tasks"]}, "patch": {"operationId": "provider_tasks_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}, "status": {"description": "", "type": "string"}, "display": {"description": "", "type": "boolean"}, "slug": {"description": "", "type": "string"}, "estimated_size": {"description": "", "type": "number"}, "estimated_duration": {"description": "", "type": "number"}}}}], "description": "Cancels an export provider task.\n* param uid: The uid of the DataProviderTaskRecord (export provider task model) to be canceled.\n* return: Returns {'success': True} on success. If the user did not have the correct rights (if not superuser,\n          they must be asking for one of their own export provider tasks), then 403 forbidden will be returned.", "summary": "Cancels an export provider task.", "consumes": ["application/json"], "tags": ["provider_tasks"]}, "delete": {"operationId": "provider_tasks_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Delete a data provider task object.\n* uid: optional lookup field\n* return: The status of the deletion.", "summary": "Delete a data provider task object.", "tags": ["provider_tasks"]}}, "/api/providers": {"get": {"operationId": "providers_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "List all data providers.\n* slug: optional lookup field\n* return: A list of data providers.", "summary": "List all data providers.", "tags": ["providers"]}}, "/api/providers/{slug}": {"get": {"operationId": "providers_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "slug", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Look up a single data provider by slug value.\n* slug: optional lookup field\n* return: The data provider with the given slug.", "summary": "Look up a single data provider by slug value.", "tags": ["providers"]}}, "/api/providers/{slug}/status": {"get": {"operationId": "providers_status_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "slug", "required": true, "in": "path", "description": "", "type": "string"}], "description": "Checks the status of a data provider to confirm that it is available.\n\n* slug: The DataProvider object slug.\n* return: The HTTP response of the data provider health check, in cases where there is no error. If the data provider does not exist, returns status 400 bad request.", "summary": "Checks the status of a data provider to confirm that it is available.", "tags": ["providers"]}, "post": {"operationId": "providers_status_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "slug", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"license": {"description": "", "type": "object"}, "name": {"description": "", "type": "string"}, "slug": {"description": "", "type": "string"}, "url": {"description": "The SERVICE_URL is used as the endpoint for WFS, OSM, and WCS services. It is also used to check availability for all OGC services. If you are adding a TMS service, please provide a link to a single tile, but with the coordinate numbers replaced by {z}, {y}, and {x}. Example: https://tiles.your-geospatial-site.com/tiles/default/{z}/{y}/{x}.png", "type": "string"}, "preview_url": {"description": "This url will be served to the front end for displaying in the map.", "type": "string"}, "service_copyright": {"description": "This information is used to display relevant copyright information.", "type": "string"}, "service_description": {"description": "This information is used to provide information about the service.", "type": "string"}, "layer": {"description": "", "type": "string"}, "max_selection": {"description": "This is the maximum area in square kilometers that can be exported from this provider in a single DataPack.", "type": "number"}, "level_from": {"description": "This determines the starting zoom level the tile export will seed from.", "type": "integer"}, "level_to": {"description": "This determines the highest zoom level the tile export will seed to.", "type": "integer"}, "config": {"description": "WMS, TMS, WMTS, and ArcGIS-Raster require a MapProxy YAML configuration\n                              with a Sources key of imagery and a Service Layer name of imagery; the validator also\n                              requires a layers section, but this isn't used.\n                              OSM Services also require a YAML configuration.", "type": "string"}, "zip": {"description": "", "type": "boolean"}, "display": {"description": "", "type": "boolean"}, "export_provider_type": {"description": "", "type": "integer"}, "user": {"description": "", "type": "integer"}}, "required": ["name"]}}], "description": "Checks the status of a data provider to confirm that it is available.\n\n* slug: The DataProvider object slug.\n* return: The HTTP response of the data provider health check, in cases where there is no error. If the data provider does not exist, returns status 400 bad request.", "summary": "Checks the status of a data provider to confirm that it is available.", "consumes": ["application/json"], "tags": ["providers"]}}, "/api/regions": {"get": {"operationId": "regions_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "List all regions.\n* uid: optional lookup field\n* return: A list of regions.", "summary": "List all regions.", "tags": ["regions"]}}, "/api/regions/{uid}": {"get": {"operationId": "regions_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Look up a single region by slug value.\n* uid: optional lookup field\n* return: The region with the given slug.", "summary": "Look up a single region by slug value.", "tags": ["regions"]}}, "/api/runs": {"get": {"operationId": "runs_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "type": "integer"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "status", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "job_uid", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "providers", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "List the ExportRuns\n:param request: the http request\n:param args:\n:param kwargs:\n:return: the serialized runs", "summary": "List the ExportRuns", "tags": ["runs"]}, "post": {"operationId": "runs_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"deleted": {"description": "", "type": "boolean"}}}}], "description": "Create a run.\n* return: The status of the creation.", "summary": "Create a run.", "consumes": ["application/json"], "tags": ["runs"]}}, "/api/runs/filter": {"get": {"operationId": "runs_filter_read", "responses": {"200": {"description": ""}}, "parameters": [], "description": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.\nAccepts GET and POST request. POST is required if you want to filter by a geojson geometry contained in the request data\n:param request: the http request\n:param args:\n:param kwargs:\n:return: the serialized runs", "summary": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.", "tags": ["runs"]}, "post": {"operationId": "runs_filter_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"deleted": {"description": "", "type": "boolean"}}}}], "description": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.\nAccepts GET and POST request. POST is required if you want to filter by a geojson geometry contained in the request data\n:param request: the http request\n:param args:\n:param kwargs:\n:return: the serialized runs", "summary": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.", "consumes": ["application/json"], "tags": ["runs"]}}, "/api/runs/{uid}": {"get": {"operationId": "runs_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "status", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "job_uid", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "providers", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Get an ExportRun.\n\nGets the run_uid from the request and returns run data for the\nassociated ExportRun.", "summary": "Get an ExportRun.", "tags": ["runs"]}, "put": {"operationId": "runs_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "status", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "job_uid", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "providers", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"deleted": {"description": "", "type": "boolean"}}}}], "description": "Update a run.\n* uid: optional lookup field\n* return: The status of the update.", "summary": "Update a run.", "consumes": ["application/json"], "tags": ["runs"]}, "patch": {"operationId": "runs_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "status", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "job_uid", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "providers", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"deleted": {"description": "", "type": "boolean"}}}}], "description": "Update the expiration date for an export run. If the user is a superuser,\nthen any date may be specified. Otherwise the date must be before  todays_date + MAX_DATAPACK_EXPIRATION_DAYS\nwhere MAX_DATAPACK_EXPIRATION_DAYS is a setting found in prod.py\n\n* request: the HTTP request in JSON.\n\n    Example:\n\n        {\n            \"expiration\" : \"2019-12-31\"\n        }\n\n* Returns: a copy of the new expiration value on success\n\n    Example:\n\n        {\n            \"expiration\": \"2019-12-31\",\n            \"success\": true\n        }\n\n** returns: 400 on error", "summary": "Update the expiration date for an export run. If the user is a superuser,", "consumes": ["application/json"], "tags": ["runs"]}, "delete": {"operationId": "runs_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "user", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "status", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "job_uid", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "visibility", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "providers", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "featured", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Destroy a model instance.", "summary": "Destroy a model instance.", "tags": ["runs"]}}, "/api/tasks": {"get": {"operationId": "tasks_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "List all tasks.\n* uid: optional lookup field\n* return: A list of all tasks.", "summary": "List all tasks.", "tags": ["tasks"]}}, "/api/tasks/{uid}": {"get": {"operationId": "tasks_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "uid", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "GET a single export task.", "summary": "GET a single export task.", "tags": ["tasks"]}}, "/api/user/activity/jobs": {"get": {"operationId": "user_activity_jobs_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "type": "integer"}, {"name": "activity", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Gets the most recent UserJobActivity objects.", "summary": "Gets the most recent UserJobActivity objects.", "tags": ["user"]}, "post": {"operationId": "user_activity_jobs_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"type": {"description": "", "type": "string"}}, "required": ["type"]}}], "description": "Creates a new UserJobActivity object.", "summary": "Creates a new UserJobActivity object.", "consumes": ["application/json"], "tags": ["user"]}}, "/api/users": {"get": {"operationId": "users_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "type": "integer"}, {"name": "username", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "groups", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "Get a list of users.\n* return: A list of all users.", "summary": "Get a list of users.", "tags": ["users"]}}, "/api/users/members": {"post": {"operationId": "users_members", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"data": {"description": "", "type": "string"}}, "required": ["data"]}}], "description": "Member list from list of group ids\n\nExample :  [ 32, 35, 36 ]", "summary": "Member list from list of group ids", "consumes": ["application/json"], "tags": ["users"]}}, "/api/users/{username}": {"get": {"operationId": "users_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "username", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "username", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "min_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "max_date", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "started_at", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "groups", "required": false, "in": "query", "description": "", "type": "string"}, {"name": "search", "required": false, "in": "query", "description": "A search term.", "type": "string"}, {"name": "ordering", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "type": "string"}], "description": "GET a user by username", "summary": "GET a user by username", "tags": ["users"]}, "patch": {"operationId": "users_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "username", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"data": {"description": "", "type": "string"}}, "required": ["data"]}}], "description": "Update user data.\n\nUser data cannot currently be updated via this API menu however UserLicense data can, by sending a patch message,\nwith the licenses data that the user agrees to.  Users will need to agree to all of the licenses prior to being allowed to\ndownload data.\n\nRequest data can be posted as `application/json`.\n\n* request: the HTTP request in JSON.", "summary": "Update user data.", "consumes": ["application/json"], "tags": ["users"]}}, "/api/users/{username}/job_permissions": {"get": {"operationId": "users_job_permissions", "responses": {"200": {"description": ""}}, "parameters": [{"name": "username", "required": true, "in": "path", "description": "", "type": "string"}], "description": "Get user's permission level for a specific job", "summary": "Get user's permission level for a specific job", "tags": ["users"]}}}, "securityDefinitions": {"basic": {"type": "basic"}}}