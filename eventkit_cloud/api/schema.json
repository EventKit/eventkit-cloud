{"info": {"version": "", "title": "EventKit API"}, "paths": {"/api/notifications/counts": {"get": {"responses": {"200": {"description": ""}}, "parameters": [], "tags": ["notifications"], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "operationId": "notifications_counts"}}, "/api/notifications/read": {"get": {"responses": {"200": {"description": ""}}, "parameters": [], "tags": ["notifications"], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "operationId": "notifications_read"}}, "/api/notifications/mark": {"post": {"responses": {"201": {"description": ""}}, "description": "Change the status of one or more notifications.\n\n\nArgs:\n    A list containing one or more records like this:\n   [\n    {\"id\": 3, \"action\": \"DELETE\" },\n    {\"id\": 17, \"action\": \"READ\" },\n    {\"id\" : 19, \"action\" \"UNREAD\" },\n    ...\n   ]\n\nReturns:\n   { \"success\" : True} or error", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["verb"], "type": "object", "properties": {"description": {"type": "string", "description": ""}, "level": {"type": "string", "description": ""}, "deleted": {"type": "boolean", "description": ""}, "timestamp": {"type": "string", "description": ""}, "verb": {"type": "string", "description": ""}, "unread": {"type": "boolean", "description": ""}}}}], "tags": ["notifications"], "summary": "Change the status of one or more notifications.", "consumes": ["application/json"], "operationId": "notifications_mark"}}, "/api/provider_tasks/{uid}": {"put": {"responses": {"200": {"description": ""}}, "description": "Update a data provider task object.\n* uid: optional lookup field\n* return: The status of the update.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"status": {"type": "string", "description": ""}, "display": {"type": "boolean", "description": ""}, "slug": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["provider_tasks"], "summary": "Update a data provider task object.", "consumes": ["application/json"], "operationId": "provider_tasks_update"}, "delete": {"responses": {"204": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["provider_tasks"], "description": "Delete a data provider task object.\n* uid: optional lookup field\n* return: The status of the deletion.", "summary": "Delete a data provider task object.", "operationId": "provider_tasks_delete"}, "patch": {"responses": {"200": {"description": ""}}, "description": "Cancels an export provider task.\n* param uid: The uid of the DataProviderTaskRecord (export provider task model) to be canceled.\n* return: Returns {'success': True} on success. If the user did not have the correct rights (if not superuser, they must be asking for one of their own export provider tasks), then 403 forbidden will be returned.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"status": {"type": "string", "description": ""}, "display": {"type": "boolean", "description": ""}, "slug": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["provider_tasks"], "summary": "Cancels an export provider task.", "consumes": ["application/json"], "operationId": "provider_tasks_partial_update"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["provider_tasks"], "description": "GET a single export task.\n\nArgs:\n    request: the http request.\n    uid: the uid of the export provider task to GET.\nReturns:\n    the serialized ExportTaskRecord data", "summary": "GET a single export task.", "operationId": "provider_tasks_read"}}, "/api/licenses": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["licenses"], "description": "* slug: optional slug value of license\n* return: A list of license objects.", "summary": "* slug: optional slug value of license", "operationId": "licenses_list"}}, "/api/user/activity/jobs": {"post": {"responses": {"201": {"description": ""}}, "description": "Creates a new UserJobActivity object.", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["job", "type"], "type": "object", "properties": {"job": {"type": "object", "description": ""}, "type": {"type": "string", "description": ""}}}}], "tags": ["user"], "summary": "Creates a new UserJobActivity object.", "consumes": ["application/json"], "operationId": "user_activity_jobs_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "integer", "description": "Number of results to return per page.", "in": "query", "name": "page_size"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "activity"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["user"], "description": "Gets the most recent UserJobActivity objects.", "summary": "Gets the most recent UserJobActivity objects.", "operationId": "user_activity_jobs_list"}}, "/api/tasks/{uid}": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["tasks"], "description": "GET a single export task.\n\nArgs:\n    request: the http request.\n    uid: the uid of the export task to GET.\nReturns:\n    the serialized ExportTaskRecord data.", "summary": "GET a single export task.", "operationId": "tasks_read"}}, "/api/jobs": {"post": {"responses": {"201": {"description": ""}}, "description": "Create a Job from the supplied request data.\n\nThe request data is validated by *api.serializers.JobSerializer*.\nAssociates the *Job* with required *ExportFormats*, *ExportConfig*\n\n* request: the HTTP request in JSON.\n\n    Example:\n\n        {\n            \"name\" : \"Example Name\",\n            \"description\" : \"Example Description\",\n            \"event\" : \"Example Event (Project)\",\n            \"include_zipfile\" : true,\n            \"selection\": { ... valid geojson ... },\n            \"tags\" : [],\n            \"provider_tasks\" : [{\n                    \"provider\" : \"OpenStreetMap Data (Themes)\",\n                    \"formats\" : [\"shp\", \"gpkg\"]\n                }\n            ]\n        }\n\n\nTo monitor the resulting export run retrieve the `uid` value from the returned json\nand call /api/runs?job_uid=[the returned uid]\n\n* Returns: the newly created Job instance.\n\n    Example:\n\n        {\n          \"provider_tasks\": [\n            {\n              \"provider\": \"OpenStreetMap Tiles\",\n              \"formats\": [\n                \"gpkg\"\n              ]\n            }\n          ],\n          \"uid\": \"cf9c038c-a09a-4058-855a-b0b1d5a6c5c4\",\n          \"url\": \"http://cloud.eventkit.test/api/jobs/cf9c038c-a09a-4058-855a-b0b1d5a6c5c4\",\n          \"name\": \"test\",\n          \"description\": \"test\",\n          \"event\": \"test\",\n          \"created_at\": \"2017-03-10T15:09:29.802364Z\",\n          \"owner\": \"admin\",\n          \"exports\": [\n            {\n              \"formats\": [\n                {\n                  \"uid\": \"167fbc03-83b3-41c9-8034-8566257cb2e8\",\n                  \"url\": \"http://cloud.eventkit.test/api/formats/gpkg\",\n                  \"slug\": \"gpkg\",\n                  \"name\": \"Geopackage\",\n                  \"description\": \"GeoPackage\"\n                }\n              ],\n              \"provider\": \"OpenStreetMap Tiles\"\n            }\n          ],\n          \"configurations\": [],\n          \"visibility\" : \"PRIVATE\",\n          \"feature_save\": false,\n          \"feature_pub\": false,\n          \"region\": null,\n          \"extent\": {\n            \"type\": \"Feature\",\n            \"properties\": {\n              \"uid\": \"cf9c038c-a09a-4058-855a-b0b1d5a6c5c4\",\n              \"name\": \"test\"\n            },\n            \"geometry\": {\n              \"type\": \"Polygon\",\n              \"coordinates\": [\n                [\n                  [\n                    -43.248281,\n                    -22.816694\n                  ],\n                  [\n                    -43.248281,\n                    -22.812105\n                  ],\n                  [\n                    -43.242617,\n                    -22.812105\n                  ],\n                  [\n                    -43.242617,\n                    -22.816694\n                  ],\n                  [\n                    -43.248281,\n                    -22.816694\n                  ]\n                ]\n              ]\n            }\n          },\n          \"tags\": [\n            {\n              \"key\": \"highway\",\n              \"value\": \"path\",\n              \"data_model\": \"HDM\",\n              \"geom_types\": [\n                \"line\"\n              ]\n            }\n          ],\n          \"include_zipfile\": false\n        }\n\n* Raises: ValidationError: in case of validation errors.\n** returns: Not 202", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["provider_tasks", "name", "description"], "type": "object", "properties": {"include_zipfile": {"type": "boolean", "description": ""}, "provider_tasks": {"items": {"type": "string"}, "type": "array", "description": ""}, "description": {"type": "string", "description": ""}, "visibility": {"type": "string", "description": ""}, "featured": {"type": "boolean", "description": ""}, "preset": {"type": "string", "description": ""}, "published": {"type": "boolean", "description": ""}, "event": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["jobs"], "summary": "Create a Job from the supplied request data.", "consumes": ["application/json"], "operationId": "jobs_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "integer", "description": "Number of results to return per page.", "in": "query", "name": "page_size"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "name"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "description"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "event"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "start"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "end"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "region"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "user"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "user_private"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "feature"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "visibility"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "featured"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}], "tags": ["jobs"], "description": "List export jobs.\n\nThe list of returned exports can be filtered by the **filters.JobFilter**\nand/or by a bounding box extent.\n\nArgs:\n    request: the HTTP request.\n    *args: Variable length argument list.\n    **kwargs: Arbitary keyword arguments.\n\nReturns:\n    A serialized collection of export jobs.\n    Uses the **serializers.ListJobSerializer** to\n    return a simplified representation of export jobs.\n\nRaises:\n    ValidationError: if the supplied extents are invalid.", "summary": "List export jobs.", "operationId": "jobs_list"}}, "/api/users": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "min_date"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "max_date"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "started_at"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "groups"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["users"], "description": "Get a list of users.\n* return: A list of all users.", "summary": "Get a list of users.", "operationId": "users_list"}}, "/api/runs/filter": {"post": {"responses": {"201": {"description": ""}}, "description": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.\nAccepts GET and POST request. POST is required if you want to filter by a geojson geometry contained in the request data\n:param request: the http request\n:param args:\n:param kwargs:\n:return: the serialized runs", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["job"], "type": "object", "properties": {"status": {"type": "string", "description": ""}, "deleted": {"type": "boolean", "description": ""}, "job": {"type": "object", "description": ""}, "expiration": {"type": "string", "description": ""}}}}], "tags": ["runs"], "summary": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.", "consumes": ["application/json"], "operationId": "runs_filter_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [], "tags": ["runs"], "description": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.\nAccepts GET and POST request. POST is required if you want to filter by a geojson geometry contained in the request data\n:param request: the http request\n:param args:\n:param kwargs:\n:return: the serialized runs", "summary": "Lists the ExportRuns and provides advanced filtering options like search_term, bbox, and geojson geometry.", "operationId": "runs_filter_read"}}, "/api/groups/{id}": {"put": {"responses": {"200": {"description": ""}}, "description": "We don't support calls to PUT for this viewset.\n* returns: 400 bad request", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "id"}, {"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"name": {"type": "string", "description": ""}}}}], "tags": ["groups"], "summary": "We don't support calls to PUT for this viewset.", "consumes": ["application/json"], "operationId": "groups_update"}, "delete": {"responses": {"204": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "id"}], "tags": ["groups"], "description": "Destroy a group", "summary": "Destroy a group", "operationId": "groups_delete"}, "patch": {"responses": {"200": {"description": ""}}, "description": "Change the group's name, members, and administrators\n\n\nSample input:\n\n    {\n       \"name\": \"Omaha 319\"\n       \"members\": [ \"user2\", \"user3\", \"admin\"],\n       \"administrators\": [ \"admin\" ]\n    }\n\nIf a member wishes to remove themselves from a group they can make an patch request with no body.\nHowever, this will not work if they are a admin of the group.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "id"}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"name": {"type": "string", "description": ""}}}}], "tags": ["groups"], "summary": "Change the group's name, members, and administrators", "consumes": ["application/json"], "operationId": "groups_partial_update"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "id"}], "tags": ["groups"], "description": "* get a group with a specific ID.  Return its data, including users in the group", "summary": "* get a group with a specific ID.  Return its data, including users in the group", "operationId": "groups_read"}}, "/api/notifications/mark_all_as_read": {"post": {"responses": {"201": {"description": ""}}, "description": "Api components for viewing and working with notifications", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["verb"], "type": "object", "properties": {"description": {"type": "string", "description": ""}, "level": {"type": "string", "description": ""}, "deleted": {"type": "boolean", "description": ""}, "timestamp": {"type": "string", "description": ""}, "verb": {"type": "string", "description": ""}, "unread": {"type": "boolean", "description": ""}}}}], "tags": ["notifications"], "summary": "Api components for viewing and working with notifications", "consumes": ["application/json"], "operationId": "notifications_mark_all_as_read"}}, "/api/runs/{uid}": {"put": {"responses": {"200": {"description": ""}}, "description": "Update a run.\n* uid: optional lookup field\n* return: The status of the update.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"required": ["job"], "type": "object", "properties": {"status": {"type": "string", "description": ""}, "deleted": {"type": "boolean", "description": ""}, "job": {"type": "object", "description": ""}, "expiration": {"type": "string", "description": ""}}}}], "tags": ["runs"], "summary": "Update a run.", "consumes": ["application/json"], "operationId": "runs_update"}, "delete": {"responses": {"204": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["runs"], "description": "Destroy a model instance.", "summary": "Destroy a model instance.", "operationId": "runs_delete"}, "patch": {"responses": {"200": {"description": ""}}, "description": "Update the expiration date for an export run. If the user is a superuser,\nthen any date may be specified. Otherwise the date must be before  todays_date + MAX_DATAPACK_EXPIRATION_DAYS\nwhere MAX_DATAPACK_EXPIRATION_DAYS is a setting found in prod.py\n\n* request: the HTTP request in JSON.\n\n    Example:\n\n        {\n            \"expiration\" : \"2019-12-31\"\n        }\n\n* Returns: a copy of the new expiration value on success\n\n    Example:\n\n        {\n            \"expiration\": \"2019-12-31\",\n            \"success\": true\n        }\n\n** returns: 400 on error", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"status": {"type": "string", "description": ""}, "deleted": {"type": "boolean", "description": ""}, "job": {"type": "object", "description": ""}, "expiration": {"type": "string", "description": ""}}}}], "tags": ["runs"], "summary": "Update the expiration date for an export run. If the user is a superuser,", "consumes": ["application/json"], "operationId": "runs_partial_update"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["runs"], "description": "Get an ExportRun.\n\nGets the run_uid from the request and returns run data for the\nassociated ExportRun.\n\nArgs:\n\n    *request: the http request.\n\n    *uid: the run uid.\n\n*Returns:\n    the serialized run data.", "summary": "Get an ExportRun.", "operationId": "runs_read"}}, "/api/providers": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["providers"], "description": "List all data providers.\n* slug: optional lookup field\n* return: A list of data providers.", "summary": "List all data providers.", "operationId": "providers_list"}}, "/api/providers/{slug}": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "slug"}], "tags": ["providers"], "description": "Look up a single data provider by slug value.\n* slug: optional lookup field\n* return: The data provider with the given slug.", "summary": "Look up a single data provider by slug value.", "operationId": "providers_read"}}, "/api/regions/{uid}": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["regions"], "description": "Look up a single region by slug value.\n* uid: optional lookup field\n* return: The region with the given slug.", "summary": "Look up a single region by slug value.", "operationId": "regions_read"}}, "/api/tasks": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["tasks"], "description": "List all tasks.\n* uid: optional lookup field\n* return: A list of all tasks.", "summary": "List all tasks.", "operationId": "tasks_list"}}, "/api/jobs/{uid}": {"put": {"responses": {"200": {"description": ""}}, "description": "Update a job object, looked up by uid.\n* uid: optional job uid lookup field\n* return: The status of the update.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"required": ["provider_tasks", "name", "description"], "type": "object", "properties": {"include_zipfile": {"type": "boolean", "description": ""}, "provider_tasks": {"items": {"type": "string"}, "type": "array", "description": ""}, "description": {"type": "string", "description": ""}, "visibility": {"type": "string", "description": ""}, "featured": {"type": "boolean", "description": ""}, "preset": {"type": "string", "description": ""}, "published": {"type": "boolean", "description": ""}, "event": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["jobs"], "summary": "Update a job object, looked up by uid.", "consumes": ["application/json"], "operationId": "jobs_update"}, "delete": {"responses": {"204": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["jobs"], "description": "Destroy a job", "summary": "Destroy a job", "operationId": "jobs_delete"}, "patch": {"responses": {"200": {"description": ""}}, "description": "Update one or more attributes for the given job\n\n* request: the HTTP request in JSON.\n\n    Examples:\n\n        { \"visibility\" : 'SHARED', \"featured\" : true }\n        { \"featured\" : false }\n\n* Returns: a copy of the new  values on success\n\n    Example:\n\n        {\n            \"visibility\": 'SHARED',\n            \"featured\" : true,\n            \"success\": true\n        }\n\n** returns: 400 on error", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"include_zipfile": {"type": "boolean", "description": ""}, "provider_tasks": {"items": {"type": "string"}, "type": "array", "description": ""}, "description": {"type": "string", "description": ""}, "visibility": {"type": "string", "description": ""}, "featured": {"type": "boolean", "description": ""}, "preset": {"type": "string", "description": ""}, "published": {"type": "boolean", "description": ""}, "event": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["jobs"], "summary": "Update one or more attributes for the given job", "consumes": ["application/json"], "operationId": "jobs_partial_update"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["jobs"], "description": "Look up a single job by uid value.\n* uid: optional job uid lookup field\n* return: The selected job.", "summary": "Look up a single job by uid value.", "operationId": "jobs_read"}}, "/api/provider_tasks": {"post": {"responses": {"201": {"description": ""}}, "description": "Create a data provider task object.\n* uid: optional lookup field\n* return: The status of the object creation.", "parameters": [{"in": "body", "name": "data", "schema": {"type": "object", "properties": {"status": {"type": "string", "description": ""}, "display": {"type": "boolean", "description": ""}, "slug": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["provider_tasks"], "summary": "Create a data provider task object.", "consumes": ["application/json"], "operationId": "provider_tasks_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["provider_tasks"], "description": "* return: A list of data provider task objects.", "summary": "* return: A list of data provider task objects.", "operationId": "provider_tasks_list"}}, "/api/groups": {"post": {"responses": {"201": {"description": ""}}, "description": "create a new group and place  the current logged in user in the group and its administrators.\noptionally, provide additional group members\n\n\nSample input:\n\n    {\n        \"name\": \"Omaha 319\"\n    }", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"name": {"type": "string", "description": ""}}}}], "tags": ["groups"], "summary": "create a new group and place  the current logged in user in the group and its administrators.", "consumes": ["application/json"], "operationId": "groups_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["groups"], "description": "GET all groups\n\nSample result:\n\n     [\n        {\n            \"id\": 54,\n            \"name\": \"Omaha 319\",\n            \"members\": [\n              \"user2\",\n              \"admin\"\n            ],\n            \"administrators\": [\n              \"admin\"\n            ]\n          }\n    ]", "summary": "GET all groups", "operationId": "groups_list"}}, "/api/users/{username}": {"patch": {"responses": {"200": {"description": ""}}, "description": "Update user data.\n\nUser data cannot currently be updated via this API menu however UserLicense data can, by sending a patch message,\nwith the licenses data that the user agrees to.  Users will need to agree to all of the licenses prior to being allowed to\ndownload data.\n\nRequest data can be posted as `application/json`.\n\n* request: the HTTP request in JSON.\n\nExample:\n\n        {\"accepted_licenses\": {\n            \"odbl\": true\n            }\n      }", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "username"}, {"in": "body", "name": "data", "schema": {"required": ["data"], "type": "object", "properties": {"data": {"type": "string", "description": ""}}}}], "tags": ["users"], "summary": "Update user data.", "consumes": ["application/json"], "operationId": "users_partial_update"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "username"}], "tags": ["users"], "description": "GET a user by username", "summary": "GET a user by username", "operationId": "users_read"}}, "/api/formats/{slug}": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "slug"}], "tags": ["formats"], "description": "* slug: optional slug value of export format\n* return: A single format object matching the provided slug value.", "summary": "* slug: optional slug value of export format", "operationId": "formats_read"}}, "/api/regions": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["regions"], "description": "List all regions.\n* uid: optional lookup field\n* return: A list of regions.", "summary": "List all regions.", "operationId": "regions_list"}}, "/api/jobs/{uid}/run": {"post": {"responses": {"201": {"description": ""}}, "description": "Creates the run (i.e. runs the job).\n\nGets the job_uid and current user from the request.\nCreates an instance of the TaskFactory and\ncalls run_task on it, passing the job_uid and user.\n\n*request:* the http request\n\n*Returns:*\n    - the serialized run data.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}, {"in": "body", "name": "data", "schema": {"required": ["provider_tasks", "name", "description"], "type": "object", "properties": {"include_zipfile": {"type": "boolean", "description": ""}, "provider_tasks": {"items": {"type": "string"}, "type": "array", "description": ""}, "description": {"type": "string", "description": ""}, "visibility": {"type": "string", "description": ""}, "featured": {"type": "boolean", "description": ""}, "preset": {"type": "string", "description": ""}, "published": {"type": "boolean", "description": ""}, "event": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["jobs"], "summary": "Creates the run (i.e. runs the job).", "consumes": ["application/json"], "operationId": "jobs_run_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "uid"}], "tags": ["jobs"], "description": "Creates the run (i.e. runs the job).\n\nGets the job_uid and current user from the request.\nCreates an instance of the TaskFactory and\ncalls run_task on it, passing the job_uid and user.\n\n*request:* the http request\n\n*Returns:*\n    - the serialized run data.", "summary": "Creates the run (i.e. runs the job).", "operationId": "jobs_run_read"}}, "/api/providers/{slug}/status": {"post": {"responses": {"201": {"description": ""}}, "description": "Checks the status of a data provider to confirm that it is available.\n\n* slug: The DataProvider object slug.\n* return: The HTTP response of the data provider health check, in cases where there is no error. If the data provider does not exist, returns status 400 bad request.", "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "slug"}, {"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"max_selection": {"type": "number", "description": "This is the maximum area in square kilometers that can be exported from this provider in a single DataPack."}, "layer": {"type": "string", "description": ""}, "zip": {"type": "boolean", "description": ""}, "name": {"type": "string", "description": ""}, "license": {"type": "object", "description": ""}, "url": {"type": "string", "description": "The SERVICE_URL is used as the endpoint for WFS, OSM, and WCS services. It is also used to check availability for all OGC services. If you are adding a TMS service, please provide a link to a single tile, but with the coordinate numbers replaced by {z}, {y}, and {x}. Example: https://tiles.your-geospatial-site.com/tiles/default/{z}/{y}/{x}.png"}, "config": {"type": "string", "description": "WMS, TMS, WMTS, and ArcGIS-Raster require a MapProxy YAML configuration\n                              with a Sources key of imagery and a Service Layer name of imagery; the validator also\n                              requires a layers section, but this isn't used.\n                              OSM Services also require a YAML configuration."}, "preview_url": {"type": "string", "description": "This url will be served to the front end for displaying in the map."}, "slug": {"type": "string", "description": ""}, "service_description": {"type": "string", "description": "This information is used to provide information about the service."}, "user": {"type": "string", "description": ""}, "level_from": {"type": "integer", "description": "This determines the starting zoom level the tile export will seed from."}, "export_provider_type": {"type": "string", "description": ""}, "level_to": {"type": "integer", "description": "This determines the highest zoom level the tile export will seed to."}, "service_copyright": {"type": "string", "description": "This information is used to display relevant copyright information."}, "display": {"type": "boolean", "description": ""}}}}], "tags": ["providers"], "summary": "Checks the status of a data provider to confirm that it is available.", "consumes": ["application/json"], "operationId": "providers_status_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "slug"}], "tags": ["providers"], "description": "Checks the status of a data provider to confirm that it is available.\n\n* slug: The DataProvider object slug.\n* return: The HTTP response of the data provider health check, in cases where there is no error. If the data provider does not exist, returns status 400 bad request.", "summary": "Checks the status of a data provider to confirm that it is available.", "operationId": "providers_status_read"}}, "/api/jobs/filter": {"post": {"responses": {"201": {"description": ""}}, "description": "Return all jobs that are readable by every\ngroups and every user in the payload\n\n{  \"permissions\" : {\n   groups : [ 'group_one', 'group_two', ...]\n   users : ['user_one', 'user_two' ... ]\n    }\n}", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["provider_tasks", "name", "description"], "type": "object", "properties": {"include_zipfile": {"type": "boolean", "description": ""}, "provider_tasks": {"items": {"type": "string"}, "type": "array", "description": ""}, "description": {"type": "string", "description": ""}, "visibility": {"type": "string", "description": ""}, "featured": {"type": "boolean", "description": ""}, "preset": {"type": "string", "description": ""}, "published": {"type": "boolean", "description": ""}, "event": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}}}}], "tags": ["jobs"], "summary": "Return all jobs that are readable by every", "consumes": ["application/json"], "operationId": "jobs_filter"}}, "/api/users/members": {"post": {"responses": {"201": {"description": ""}}, "description": "Member list from list of group ids\n\nExample :  [ 32, 35, 36 ]", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["data"], "type": "object", "properties": {"data": {"type": "string", "description": ""}}}}], "tags": ["users"], "summary": "Member list from list of group ids", "consumes": ["application/json"], "operationId": "users_members"}}, "/api/formats": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "string", "description": "A search term.", "in": "query", "name": "search"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["formats"], "description": "* slug: optional slug value of export format\n* return: A list of format types.", "summary": "* slug: optional slug value of export format", "operationId": "formats_list"}}, "/api/notifications/unread": {"get": {"responses": {"200": {"description": ""}}, "parameters": [], "tags": ["notifications"], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "operationId": "notifications_unread"}}, "/api/licenses/{slug}": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "slug"}], "tags": ["licenses"], "description": "* slug: optional slug value of license\n* return: A single license object matching the provided slug value.", "summary": "* slug: optional slug value of license", "operationId": "licenses_read"}}, "/api/licenses/{slug}/download": {"get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": true, "type": "string", "description": "", "in": "path", "name": "slug"}], "tags": ["licenses"], "description": "Responds to a GET request with a text file of the license text\n\n*request:* the http request\n*slug:* the license slug\n\n*Returns:*\n    - a .txt file of the license text.", "summary": "Responds to a GET request with a text file of the license text", "operationId": "licenses_download"}}, "/api/notifications/all": {"get": {"responses": {"200": {"description": ""}}, "parameters": [], "tags": ["notifications"], "description": "Api components for viewing and working with notifications", "summary": "Api components for viewing and working with notifications", "operationId": "notifications_all"}}, "/api/runs": {"post": {"responses": {"201": {"description": ""}}, "description": "Create a run.\n* return: The status of the creation.", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["job"], "type": "object", "properties": {"status": {"type": "string", "description": ""}, "deleted": {"type": "boolean", "description": ""}, "job": {"type": "object", "description": ""}, "expiration": {"type": "string", "description": ""}}}}], "tags": ["runs"], "summary": "Create a run.", "consumes": ["application/json"], "operationId": "runs_create"}, "get": {"responses": {"200": {"description": ""}}, "parameters": [{"required": false, "type": "integer", "description": "A page number within the paginated result set.", "in": "query", "name": "page"}, {"required": false, "type": "integer", "description": "Number of results to return per page.", "in": "query", "name": "page_size"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "user"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "status"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "job_uid"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "min_date"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "max_date"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "started_at"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "visibility"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "providers"}, {"required": false, "type": "string", "description": "", "in": "query", "name": "featured"}, {"required": false, "type": "string", "description": "Which field to use when ordering the results.", "in": "query", "name": "ordering"}], "tags": ["runs"], "description": "List the ExportRuns\n:param request: the http request\n:param args:\n:param kwargs:\n:return: the serialized runs", "summary": "List the ExportRuns", "operationId": "runs_list"}}}, "swagger": "2.0", "securityDefinitions": {"basic": {"type": "basic"}}}