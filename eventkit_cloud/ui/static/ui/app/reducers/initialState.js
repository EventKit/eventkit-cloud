import { userState, usersState } from './userReducer';

export default {
    auth: userState,
    aoiInfo: {
        geojson: {},
        originalGeojson: {},
        geomType: null,
        title: null,
        description: null,
        selectionType: null,
        buffer: 0,
    },
    geocode: {
        fetching: false,
        fetched: false,
        data: [],
        error: null,
    },
    user: userState,
    importGeom: {
        processing: false,
        processed: false,
        featureCollection: {},
        error: null,
        filename: '',
    },
    drawer: 'closed',
    runsList: {
        fetching: false,
        fetched: false,
        runs: [],
        error: null,
        nextPage: false,
        range: '',
        order: '',
        view: '',
        cancelSource: null,
    },
    runsDeletion: {
        deleting: false,
        deleted: false,
        error: null,
    },
    submitJob: {
        fetching: false,
        fetched: false,
        jobuid: '',
        error: null,
    },
    exportInfo: {
        exportName: '',
        datapackDescription: '',
        projectName: '',
        providers: [],
        areaStr: '',
        formats: [],
    },
    providers: [],
    stepperNextEnabled: false,
    datacartDetails: {
        fetching: false,
        fetched: false,
        data: [],
        error: null,
    },
    runDeletion: {
        deleting: false,
        deleted: false,
        error: null,
    },
    exportReRun: {
        fetching: false,
        fetched: false,
        data: [],
        error: null,
    },
    licenses: {
        fetching: false,
        fetched: false,
        licenses: [],
        error: null,
    },
    cancelProviderTask: {
        canceling: false,
        canceled: false,
        error: null,
    },
    updateExpiration: {
        updating: false,
        updated: false,
        error: null,
    },
    updatePermission: {
        updating: false,
        updated: false,
        error: null,
    },
    formats: [],
    groups: {
        groups: [],
        cancelSource: null,
        fetching: false,
        fetched: false,
        creating: false,
        created: false,
        deleting: false,
        deleted: false,
        updating: false,
        updated: false,
        error: null,
    },
    users: usersState,
};
