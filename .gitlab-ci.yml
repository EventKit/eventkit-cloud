stages:
  - pending
  - lint
  - test
  - results

variables:
  MOUNT_POINT: $CI_PROJECT_DIR
  BRANCH: "master"
  NEXUS_BASE_URL: $NEXUS_BASE_URL
  NEXUS_REPO: "EventKit_eventkit"
  BASE_URL: "http://host.docker.internal:6080"
  SITE_NAME: "host.docker.internal"
  SITE_IP: "127.0.0.1"
  SECRET_KEY: "TESTING"
  VERSION: "1.14.0"

image:
  name: $DOCKER_IMAGE

.default:
  when: always

pending-tests:
  when: always
  stage: pending
  script:
    - python scripts/github.py pending "Waiting for tests."

.front:
  image: "${CI_REGISTRY_PATH}eventkit/eventkit-webpack:${VERSION}-0"
  before_script:
    - cd /var/lib/eventkit

.back:
  image:
    name: "${CI_REGISTRY_PATH}eventkit/eventkit-base:${VERSION}-0"
    entrypoint: [ "" ]
  before_script:
    - . activate conda_env

.lint:
  stage: lint
  extends: .default


eslint:
  extends:
    - .front
    - .lint
  script:
    - npm run eslint

black:
  extends:
    - .back
    - .lint
  script:
    - black --check eventkit_cloud

isort:
  extends:
    - .back
    - .lint
  script:
    - isort eventkit_cloud

flake8:
  extends:
    - .back
    - .lint
  script:
    - flake8 eventkit_cloud

mypy:
  extends:
    - .back
    - .lint
  script:
    - mypy eventkit_cloud

migrations:
  extends:
    - .back
    - .lint
  script:
    - python manage.py makemigrations eventkit_cloud | grep -i "No changes detected"

.test:
  stage: test
  extends: .default

unit-back:
  extends:
    - .test
  tags:
    - dind
  script:
    - python scripts/ci_utils.py
    - mkdir -p exports_stage exports_download && chmod 777 exports_stage exports_download && chown -R 8800:880 . || echo $?
    - docker-compose run --rm -T -e COVERAGE=True -e COVERAGE_THRESHOLD=68 eventkit python manage.py test -v=2 --noinput eventkit_cloud

unit-front:
  extends:
    - .front
    - .test
  script:
    - npm run coverage

integration-tests:
  when: always
  extends: .test
  needs: ["unit-front","unit-back"]
  tags:
    - dind
  variables:
    DATABASE_URL: postgres://eventkit:eventkit_exports@postgis:5432/eventkit_exports
    BROKER_URL: amqp://guest:guest@rabbitmq:5672/
    BROKER_API_URL: http://guest:guest@rabbitmq:15672/api/
    CELERY_RESULT_BACKEND: cache+memcached://memcached:11211
    LOG_LEVEL: INFO
    EXPORT_DOWNLOAD_ROOT: /var/lib/eventkit/exports_download
    PYTHONWARNINGS: ignore
  script:
    - python scripts/ci_utils.py
    - mkdir -p exports_stage exports_download && chmod 777 exports_stage exports_download || echo $?
    - docker-compose up -d && docker-compose stop celery webpack flower httpd && BIND_MOUNT_LOCATION=$PWD docker-compose run --rm -d --user=root --name=celery_worker celery || echo $?
    - docker-compose exec -T eventkit bash -c 'source activate conda_env && python manage.py migrate'
    - docker-compose exec -T eventkit bash -c 'source activate conda_env && python manage.py loaddata admin_user osm_provider datamodel_presets' || echo $?
    - docker-compose exec -T eventkit bash -c 'source activate conda_env && python manage.py run_integration_tests eventkit_cloud.jobs.tests.integration_test_jobs.TestJob.test_all eventkit_cloud.jobs.tests.integration_test_jobs.TestJob.test_cancel_osm_run'; EXIT_CODE=$?; exit $EXIT_CODE || docker-compose ps; docker logs --tail 200 celery_worker; docker-compose logs --no-log-prefix --tail=200 eventkit; exit $EXIT_CODE

pass-tests:
  when: on_success
  stage: results
  script:
    - python scripts/github.py success "All tests pass."

fail-tests:
  when: on_failure
  stage: results
  script:
    - python scripts/github.py failure "The pipeline failed."
