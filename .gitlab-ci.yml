stages:
  - pending
  - lint
  - test
  - results

variables:
  AWS_ACCESS_KEY_ID: AWS_ID
  AWS_ENDPOINT_URL: "http://minio:9000"
  AWS_SECRET_ACCESS_KEY: AWS_SECRET
  AWS_STORAGE_BUCKET_NAME: eventkit
  BASE_URL: "http://127.0.0.1:6080"
  BRANCH: "master"
  CURL_CA_BUNDLE: "./conda/cacert.pem"
  GIT_STRATEGY: clone
  MOUNT_POINT: $CI_PROJECT_DIR
  NEXUS_BASE_URL: $NEXUS_BASE_URL
  NEXUS_REPO: "EventKit_eventkit"
  REQUESTS_CA_BUNDLE: "./conda/cacert.pem"
  SECRET_KEY: "TESTING"
  SITE_NAME: "127.0.0.1"
  VERSION: "1.14.0"

image:
  name: $DOCKER_IMAGE

.default:
  when: always
  needs: []

pending-tests:
  when: always
  stage: pending
  variables:
    GIT_STRATEGY: fetch
  script:
    - python scripts/github.py pending "Waiting for tests."

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/
    - node_modules/

.front_rules:
  before_script:
    - shopt -s expand_aliases
    - alias front_diff="git diff --quiet --exit-code remotes/origin/$CI_DEFAULT_BRANCH -- eventkit_cloud/ui/static/ui/**/* config/**/* package.json .gitlab-ci.yml"

.front:
  image: "${CI_REGISTRY_PATH}eventkit/eventkit-webpack:${VERSION}-0"
  before_script:
    - !reference [ .front_rules, before_script ]
    - front_diff || cp -rf config/ui/. ./
    - front_diff || npm ci --cache .npm --prefer-offline

.back_rules:
  before_script:
    - shopt -s expand_aliases
    - alias back_diff="git diff --quiet --exit-code remotes/origin/$CI_DEFAULT_BRANCH -- conda/**/* config/* requirements.txt requirements-dev.txt eventkit_cloud/**/* environment.yml setup.py setup.cfg docker-compose.yml .gitlab-ci.yml"

.back:
  extends: .back_rules
  image:
    name: "${CI_REGISTRY_PATH}eventkit/eventkit-base:${VERSION}-1"
    entrypoint: [ "" ]
  variables:
    CURL_CA_BUNDLE: "./conda/cacert.pem"
    REQUESTS_CA_BUNDLE: "./conda/cacert.pem"
  before_script:
    - !reference [.back_rules, before_script]

.lint:
  stage: lint
  extends: .default

eslint:
  extends:
    - .front
    - .lint
  script:
    - ls -al
    - git --help
    - git log
    - git status
    - git branch -a
    - echo "CI_DEFAULT_BRANCH $CI_DEFAULT_BRANCH"
    - echo "CI_COMMIT_REF_NAME $CI_COMMIT_REF_NAME"
    - env
    - front_diff || npm run eslint
#
#black:
#  extends:
#    - .back
#    - .lint
#  script:
#    - back_diff || black --check eventkit_cloud
#
#isort:
#  extends:
#    - .back
#    - .lint
#  script:
#    - back_diff || isort eventkit_cloud
#
#flake8:
#  extends:
#    - .back
#    - .lint
#  script:
#    - back_diff || flake8 eventkit_cloud
#
#mypy:
#  extends:
#    - .back
#    - .lint
#  script:
#    - back_diff || mypy --no-incremental eventkit_cloud
#
#migrations:
#  extends:
#    - .back
#    - .lint
#  script:
#    - back_diff || python manage.py makemigrations eventkit_cloud | grep -i "No changes detected"
#
#.test:
#  stage: test
#  extends: .default
#
#unit-back:
#  extends:
#    - .back_rules
#    - .test
#  tags:
#    - dind
#  script:
#    - back_diff || python scripts/ci_utils.py
#    - back_diff || mkdir -p exports_stage && chmod 777 exports_stage && chown -R 8800:880 . || echo $?
#    - back_diff || docker-compose run --rm -T -e COVERAGE=True -e COVERAGE_THRESHOLD=68 eventkit python manage.py test -v=2 --noinput eventkit_cloud
#
#unit-front:
#  extends:
#    - .front
#    - .test
#  script:
#    - front_diff || npm run coverage
#
#integration-tests:
#  when: always
#  extends: .test
#  needs: ["unit-front", "unit-back"]
#  tags:
#    - dind
#  variables:
#    DATABASE_URL: postgres://eventkit:eventkit_exports@postgis:5432/eventkit_exports
#    BROKER_URL: amqp://guest:guest@rabbitmq:5672/
#    BROKER_API_URL: http://guest:guest@rabbitmq:15672/api/
#    CELERY_RESULT_BACKEND: cache+memcached://memcached:11211
#    LOG_LEVEL: INFO
#    EXPORT_DOWNLOAD_ROOT: /var/lib/eventkit/exports_download
#    PYTHONWARNINGS: ignore
#  before_script:
#    - !reference [.back_rules, before_script]
#    - !reference [.front_rules, before_script]
#    - alias branch_diff="back_diff && front_diff"
#  script:
#    - branch_diff || python scripts/ci_utils.py
#    - branch_diff || mkdir -p exports_stage exports_download && chmod 777 exports_stage exports_download || echo $?
#    - branch_diff || docker-compose up -d && docker-compose stop celery webpack flower httpd && BIND_MOUNT_LOCATION=$PWD docker-compose run --rm -d --user=root --name=celery_worker celery || echo $?
#    - branch_diff || docker-compose exec -T eventkit bash -c 'source activate conda_env && python manage.py migrate'
#    - branch_diff || docker-compose exec -T eventkit bash -c 'source activate conda_env && python manage.py loaddata admin_user osm_provider datamodel_presets' || echo $?
#    - branch_diff || docker-compose exec -T eventkit bash -c 'source activate conda_env && python manage.py run_integration_tests eventkit_cloud.jobs.tests.integration_test_jobs.TestJob.test_all eventkit_cloud.jobs.tests.integration_test_jobs.TestJob.test_cancel_osm_run'; EXIT_CODE=$?; exit $EXIT_CODE || docker-compose ps; docker logs --tail 200 celery_worker; docker-compose logs --no-log-prefix --tail=200 eventkit; exit $EXIT_CODE
#
#pass-tests:
#  when: on_success
#  stage: results
#  variables: 
#    GIT_STRATEGY: fetch
#  script:
#    - python scripts/github.py success "All tests pass."
#
#fail-tests:
#  when: on_failure
#  stage: results
#  variables:
#    GIT_STRATEGY: fetch
#  script:
#    - python scripts/github.py failure "The pipeline failed."
